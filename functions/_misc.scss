
// =======================================
// ^FUNCTIONS.MISC
// =======================================


// ----
// Shorthand function to call quickly values from default
// `$font-sizes` or specified map with set of font sizes values
//
// @param {string} $name         - font name, specified in default font sizes map
//                                 or specified one
// @param {string} $type         - group's name of font in default or specified map
// @param {map} $map=$font-sizes - should mixin search for font sizes in default,
//                                 or specified map
//                                 See `font-class()` mixin for details about format
//
// @example
//
//		.heading { font-size: font-size(h1, headings); }
//		.heading { font-size: (big, my-group, $map:$my-custom-sizes); }

@function font-size($name, $type, $map:$font-sizes) {

	$value: null;

	@if map-has-key($map, $type) {
		$working-map: map-get($map, $type);
		@if map-has-key($working-map, $name) {
			$value: map-get($working-map, $name);
		} @else {
			@error 'No such `#{$name}` font name in specified map!';
		}
	} @else {
		@error 'No such `#{$type}` font type in specified map!';
	}

	@return $value
}



// ---------------------------------------
// Convert Direction
// ---------------------------------------
//
// Takes a direction and returns the opposite
//
// @param {string} $direction - initial direction
//
// @return {string}

@function convert-direction($direction) {
    @if $direction == 'top'         { @return 'bottom'; }
    @else if $direction == 'bottom' { @return 'top'; }
    @else if $direction == 'left'   { @return 'right'; }
    @else if $direction == 'right'  { @return 'left'; }
}



// ---------------------------------------
// Tint & Shade
// ---------------------------------------

// ----
// Tint
//
// Add percentage of white to a color
//
// @param {color}  $color   - The color to be tinted
// @param {number} $percent - The percentage amount the color is to be tinted
//
// @return {color}

@function tint($color, $percent){
  @return mix(white, $color, $percent);
}

// -----
// Shade
//
// Add percentage of black to a color
//
// @param {color} $color    - The color to be tinted
// @param {number} $percent - The percentage amount the color is to be shaded
//
// @return {color}

@function shade($color, $percent){
  @return mix(black, $color, $percent);
}