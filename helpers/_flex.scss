// stylelint-disable declaration-no-important

// =======================================
// ^HELPERS.FLEXBOX
// =======================================

@mixin ekzo-flex-helpers($prefix:'', $postfix:'') {

  // ---------------------------------------
  // flex container helpers
  // ---------------------------------------

  .#{$prefix}flex#{$postfix}        { display: flex        !important; }
  .#{$prefix}inline-flex#{$postfix} { display: inline-flex !important; }

  // -----
  // Items stacking

  .#{$prefix}flex--row#{$postfix}         { flex-direction: row            !important; } // default for flex
  .#{$prefix}flex--row--rev#{$postfix}    { flex-direction: row-reverse    !important; }
  .#{$prefix}flex--column#{$postfix}      { flex-direction: column         !important; }
  .#{$prefix}flex--column--rev#{$postfix} { flex-direction: column-reverse !important; }

  // -----
  // Items wrapping

  .#{$prefix}flex--wrap#{$postfix}      { flex-wrap: wrap         !important; }
  .#{$prefix}flex--wrap--rev#{$postfix} { flex-wrap: wrap-reverse !important; }
  .#{$prefix}flex--nowrap#{$postfix}    { flex-wrap: nowrap       !important; }// default for flex

  // -----
  // Main axis aligment

  .#{$prefix}flex-x--start#{$postfix}   { justify-content: flex-start    !important; } // default for flex
  .#{$prefix}flex-x--center#{$postfix}  { justify-content: center        !important; }
  .#{$prefix}flex-x--end#{$postfix}     { justify-content: flex-end      !important; }
  .#{$prefix}flex-x--between#{$postfix} { justify-content: space-between !important; } // = justify
  .#{$prefix}flex-x--around#{$postfix}  { justify-content: space-around  !important; } // ~ justify, but with spacing around

  // -----
  // Cross axis aligment

  .#{$prefix}flex-y--stretch#{$postfix}  { align-items: stretch    !important; } // default for flex, 100% height of container
  .#{$prefix}flex-y--top#{$postfix}      { align-items: flex-start !important; }
  .#{$prefix}flex-y--center#{$postfix}   { align-items: center     !important; }
  .#{$prefix}flex-y--end#{$postfix}      { align-items: flex-end   !important; }
  .#{$prefix}flex-y--baseline#{$postfix} { align-items: baseline   !important; } // aligns by text baseline

  // -----
  // Cross axis aligment of rows

  .#{$prefix}flex-rows--stretch#{$postfix} { align-content: stretch       !important; } // default for flex, 100% height of container
  .#{$prefix}flex-rows--start#{$postfix}   { align-content: flex-start    !important; }
  .#{$prefix}flex-rows--center#{$postfix}  { align-content: center        !important; }
  .#{$prefix}flex-rows--end#{$postfix}     { align-content: flex-end      !important; }
  .#{$prefix}flex-rows--between#{$postfix} { align-content: space-between !important; }
  .#{$prefix}flex-rows--around#{$postfix}  { align-content: space-around  !important; }

  // ---------------------------------------
  // flex items helpers
  // ---------------------------------------

  // -----
  // Flex of individual item
  // Should item occupy free space or no

  .#{$prefix}flex__item--grow0#{$postfix}  { flex-grow: 0 !important; } // default for flex
  .#{$prefix}flex__item--grow#{$postfix}   { flex-grow: 1 !important; } // if set flex-item will occupy all flex-container space
  .#{$prefix}flex__item--grow#{$postfix}\+ { flex-grow: 2 !important; }

  // Should item shrink when there is no free space

  .#{$prefix}flex__item--shrink0#{$postfix}  { flex-shrink: 0 !important; } // default for flex in IE10
  .#{$prefix}flex__item--shrink#{$postfix}   { flex-shrink: 1 !important; } // default for flex
  .#{$prefix}flex__item--shrink#{$postfix}\+ { flex-shrink: 2 !important; }

  // Base width of individual item
  // {0|auto|px|rem|em|%|...}

  .#{$prefix}flex__item--basis--auto#{$postfix} { flex-basis: auto !important; } // default for flex, = inline-block behaviour

  .#{$prefix}flex__item--flex--auto#{$postfix}  { flex: 1 1 auto !important; }
  .#{$prefix}flex__item--flex#{$postfix}        { flex: 1 1 0% !important; }
  .#{$prefix}flex__item--flex0#{$postfix}       { flex: none   !important; }

  // -----
  // Order of individual item

  .#{$prefix}order--first#{$postfix} { order: -10000 !important; }
  .#{$prefix}order--1#{$postfix}     { order: 1      !important; }
  .#{$prefix}order--2#{$postfix}     { order: 2      !important; }
  .#{$prefix}order--3#{$postfix}     { order: 3      !important; }
  .#{$prefix}order--last#{$postfix}  { order: 10000  !important; }
  .#{$prefix}order--flush#{$postfix} { order: 0      !important; } // default for flex

  // -----
  // Cross axis aligment of individual item

  .#{$prefix}flex__item--auto#{$postfix}     { align-self: auto       !important; } // default for flex
  .#{$prefix}flex__item--stretch#{$postfix}  { align-self: stretch    !important; }
  .#{$prefix}flex__item--start#{$postfix}    { align-self: flex-start !important; }
  .#{$prefix}flex__item--center#{$postfix}   { align-self: center     !important; }
  .#{$prefix}flex__item--end#{$postfix}      { align-self: flex-end   !important; }
  .#{$prefix}flex__item--baseline#{$postfix} { align-self: baseline   !important; }

}

@if $ekzo-enable-flex-helpers {

  // ---------------------------------------
  // Call all flex helpers
  // ---------------------------------------

  @include ekzo-flex-helpers($prefix: $ekzo-helpers-ns);

  // ---------------------------------------
  // Responsive flex helpers
  // ---------------------------------------

  @include ekzo-for-each-breakpoint($matches: $ekzo-responsive-flex-helpers-breakpoints) {
    @include ekzo-flex-helpers($prefix: $ekzo-helpers-ns, $postfix: ekzo-temp());
  }

} // endif