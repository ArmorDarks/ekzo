
/*------------------------------------*\
	$WIDTHS
\*------------------------------------*/


/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */

@mixin grid-setup($namespace: '') {

	$use-fractions:   true;

	@if $use-fractions {

		/* Whole */

		[class~='#{$namespace}1/1']       { width: 100% !important; }

		/* Halves */

		[class~='#{$namespace}1/2'],
		[class~='#{$namespace}2/4'],
		[class~='#{$namespace}3/6'],
		[class~='#{$namespace}4/8'],
		[class~='#{$namespace}5/10'],
		[class~='#{$namespace}6/12']      { width: 50% !important; }

		/* Thirds */

		[class~='#{$namespace}1/3'],
		[class~='#{$namespace}2/6'],
		[class~='#{$namespace}3/9'],
		[class~='#{$namespace}4/12']      { width: 33.3333333% !important; }
		[class~='#{$namespace}2/3'],
		[class~='#{$namespace}4/6'],
		[class~='#{$namespace}6/9'],
		[class~='#{$namespace}8/12']      { width: 66.6666666% !important; }

		/* Quarters */

		[class~='#{$namespace}1/4'],
		[class~='#{$namespace}2/8'],
		[class~='#{$namespace}3/12']      { width: 25% !important; }
		[class~='#{$namespace}3/4'],
		[class~='#{$namespace}6/8'],
		[class~='#{$namespace}9/12']      { width: 75% !important; }

		/* Fifths */

		[class~='#{$namespace}1/5'],
		[class~='#{$namespace}2/10']      { width: 20% !important; }
		[class~='#{$namespace}2/5'],
		[class~='#{$namespace}4/10']      { width: 40% !important; }
		[class~='#{$namespace}3/5'],
		[class~='#{$namespace}6/10']      { width: 60% !important; }
		[class~='#{$namespace}4/5'],
		[class~='#{$namespace}8/10']      { width: 80% !important; }

		/* Sixths */

		[class~='#{$namespace}1/6'],
		[class~='#{$namespace}2/12']      { width: 16.6666666% !important; }
		[class~='#{$namespace}5/6'],
		[class~='#{$namespace}10/12']     { width: 83.3333333% !important; }

		/* Eighths */

		[class~='#{$namespace}1/8']       { width: 12.5% !important; }
		[class~='#{$namespace}3/8']       { width: 37.5% !important; }
		[class~='#{$namespace}5/8']       { width: 62.5% !important; }
		[class~='#{$namespace}7/8']       { width: 87.5% !important; }

		/* Ninths */

		[class~='#{$namespace}1/9']       { width: 11.1111111% !important; }
		[class~='#{$namespace}2/9']       { width: 22.2222222% !important; }
		[class~='#{$namespace}4/9']       { width: 44.4444444% !important; }
		[class~='#{$namespace}5/9']       { width: 55.5555555% !important; }
		[class~='#{$namespace}7/9']       { width: 77.7777777% !important; }
		[class~='#{$namespace}8/9']       { width: 88.8888888% !important; }

		/* Tenths */

		[class~='#{$namespace}1/10']      { width: 10% !important; }
		[class~='#{$namespace}3/10']      { width: 30% !important; }
		[class~='#{$namespace}7/10']      { width: 70% !important; }
		[class~='#{$namespace}9/10']      { width: 90% !important; }

		/* Twelfths */

		[class~='#{$namespace}1/12']      { width:  8.3333333% !important; }
		[class~='#{$namespace}5/12']      { width: 41.6666666% !important; }
		[class~='#{$namespace}7/12']      { width: 58.3333333% !important; }
		[class~='#{$namespace}11/12']     { width: 91.6666666% !important; }

	} @else {

		/* Halves */

		.#{$namespace}one-half,
		.#{$namespace}two-quarters,
		.#{$namespace}three-sixths,
		.#{$namespace}four-eighths,
		.#{$namespace}five-tenths,
		.#{$namespace}six-twelfths        { width: 50% !important; }

		/* Thirds. */

		.#{$namespace}one-third,
		.#{$namespace}two-sixths,
		.#{$namespace}three-ninths,
		.#{$namespace}four-twelfths       { width: 33.3333333% !important; }
		.#{$namespace}two-thirds,
		.#{$namespace}four-sixths,
		.#{$namespace}six-ninths,
		.#{$namespace}eight-twelfths      { width: 66.6666666% !important; }

		/* Quarters */

		.#{$namespace}one-quarter,
		.#{$namespace}two-eighths,
		.#{$namespace}three-twelfths      { width: 25% !important; }
		.#{$namespace}three-quarters,
		.#{$namespace}six-eighths,
		.#{$namespace}nine-twelfths       { width: 75% !important; }

		/* Fifths */

		.#{$namespace}one-fifth,
		.#{$namespace}two-tenths          { width: 20% !important; }
		.#{$namespace}two-fifths,
		.#{$namespace}four-tenths         { width: 40% !important; }
		.#{$namespace}three-fifths,
		.#{$namespace}six-tenths          { width: 60% !important; }
		.#{$namespace}four-fifths,
		.#{$namespace}eight-tenths        { width: 80% !important; }

		/* Sixths */

		.#{$namespace}one-sixth,
		.#{$namespace}two-twelfths        { width: 16.6666666% !important; }
		.#{$namespace}five-sixths,
		.#{$namespace}ten-twelfths        { width: 83.3333333% !important; }

		/* Eighths */

		.#{$namespace}one-eighth          { width: 12.5% !important; }
		.#{$namespace}three-eighths       { width: 37.5% !important; }
		.#{$namespace}five-eighths        { width: 62.5% !important; }
		.#{$namespace}seven-eighths       { width: 87.5% !important; }

		/* Ninths */

		.#{$namespace}one-ninth           { width: 11.1111111% !important; }
		.#{$namespace}two-ninths          { width: 22.2222222% !important; }
		.#{$namespace}four-ninths         { width: 44.4444444% !important; }
		.#{$namespace}five-ninths         { width: 55.5555555% !important; }
		.#{$namespace}seven-ninths        { width: 77.7777777% !important; }
		.#{$namespace}eight-ninths        { width: 88.8888888% !important; }

		/* Tenths */

		.#{$namespace}one-tenth           { width: 10% !important; }
		.#{$namespace}three-tenths        { width: 30% !important; }
		.#{$namespace}seven-tenths        { width: 70% !important; }
		.#{$namespace}nine-tenths         { width: 90% !important; }

		/* Twelfths */

		.#{$namespace}one-twelfth         { width:  8.3333333% !important; }
		.#{$namespace}five-twelfths       { width: 41.6666666% !important; }
		.#{$namespace}seven-twelfths      { width: 58.3333333% !important; }
		.#{$namespace}eleven-twelfths     { width: 91.6666666% !important; }

	} // endif


		// #note - make above version with extends

		// /**
		// * Whole
		// */

		// .#{$namespace}one-whole         { width:100%; }


		// /**
		// * Halves
		// */

		// .#{$namespace}one-half          { width:50%; }


		// /**
		// * Thirds
		// */

		// .#{$namespace}one-third         { width:33.333%; }
		// .#{$namespace}two-thirds        { width:66.666%; }


		// /**
		// * Quarters
		// */

		// .#{$namespace}one-quarter       { width:25%; }
		// .#{$namespace}two-quarters      { @extend .#{$namespace}one-half; }
		// .#{$namespace}three-quarters    { width:75%; }


		// /**
		// * Fifths
		// */

		// .#{$namespace}one-fifth         { width:20%; }
		// .#{$namespace}two-fifths        { width:40%; }
		// .#{$namespace}three-fifths      { width:60%; }
		// .#{$namespace}four-fifths       { width:80%; }


		// /**
		// * Sixths
		// */

		// .#{$namespace}one-sixth         { width:16.666%; }
		// .#{$namespace}two-sixths        { @extend .#{$namespace}one-third; }
		// .#{$namespace}three-sixths      { @extend .#{$namespace}one-half; }
		// .#{$namespace}four-sixths       { @extend .#{$namespace}two-thirds; }
		// .#{$namespace}five-sixths       { width:83.333%; }


		// /**
		// * Eighths
		// */

		// .#{$namespace}one-eighth        { width:12.5%; }
		// .#{$namespace}two-eighths       { @extend .#{$namespace}one-quarter; }
		// .#{$namespace}three-eighths     { width:37.5%; }
		// .#{$namespace}four-eighths      { @extend .#{$namespace}one-half; }
		// .#{$namespace}five-eighths      { width:62.5%; }
		// .#{$namespace}six-eighths       { @extend .#{$namespace}three-quarters; }
		// .#{$namespace}seven-eighths     { width:87.5%; }


		// /**
		// * Tenths
		// */

		// .#{$namespace}one-tenth         { width:10%; }
		// .#{$namespace}two-tenths        { @extend .#{$namespace}one-fifth; }
		// .#{$namespace}three-tenths      { width:30%; }
		// .#{$namespace}four-tenths       { @extend .#{$namespace}two-fifths; }
		// .#{$namespace}five-tenths       { @extend .#{$namespace}one-half; }
		// .#{$namespace}six-tenths        { @extend .#{$namespace}three-fifths; }
		// .#{$namespace}seven-tenths      { width:70%; }
		// .#{$namespace}eight-tenths      { @extend .#{$namespace}four-fifths; }
		// .#{$namespace}nine-tenths       { width:90%; }


		// /**
		// * Twelfths
		// */

		// .#{$namespace}one-twelfth       { width:8.333%; }
		// .#{$namespace}two-twelfths      { @extend .#{$namespace}one-sixth; }
		// .#{$namespace}three-twelfths    { @extend .#{$namespace}one-quarter; }
		// .#{$namespace}four-twelfths     { @extend .#{$namespace}one-third; }
		// .#{$namespace}five-twelfths     { width:41.666% }
		// .#{$namespace}six-twelfths      { @extend .#{$namespace}one-half; }
		// .#{$namespace}seven-twelfths    { width:58.333%; }
		// .#{$namespace}eight-twelfths    { @extend .#{$namespace}two-thirds; }
		// .#{$namespace}nine-twelfths     { @extend .#{$namespace}three-quarters; }
		// .#{$namespace}ten-twelfths      { @extend .#{$namespace}five-sixths; }
		// .#{$namespace}eleven-twelfths   { width:91.666%; }

} // mixin

@include grid-setup();



/**
 * If you have set `$responsive` to 'true' in `_vars.scss` then you now have
 * access to these classes. You can define at which breakpoint you'd like an
 * element to be a certain size, e.g.:
 *
 * `<div class='g  one-quarter  lap-one-half  palm-one-whole'> ... </div>`
 *
 * This would create a `div` that, at 'desktop' sizes, takes up a quarter of the
 * horizontal space, a half of that space at 'tablet' sizes, and goes full width
 * at 'mobile' sizes.
 *
 * Demo: jsfiddle.net/inuitcss/WS4Ge
 *
 */

@if $responsive {

	@if $responsive-palm {

		@include media-query(palm) {
			@include grid-setup('palm-');
		}

	} // endif

	@if $responsive-lap {

		@include media-query(lap) {
			@include grid-setup('lap-');
		}

	} // endif

	@if $responsive-lap-and-up {

		@include media-query(lap-and-up) {
			@include grid-setup('lap-and-up-');
		}

	} // endif

	@if $responsive-portable {

		@include media-query(portable) {
			@include grid-setup('portable-');
		}

	} // endif

	@if $responsive-desk {

		@include media-query(desk) {
			@include grid-setup('desk-');
		}

	} // endif

	/**
	 * If you have set the additional `$responsive-extra` variable to 'true' in
	 * `_vars.scss` then you now have access to the following class available to
	 * accomodate much larger screen resolutions.
	 */

	@if $responsive-desk-wide {

		@include media-query(desk-wide) {
			@include grid-setup('desk-wide-');
		}

	}

} // endif
