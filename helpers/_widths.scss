
// =======================================
// ^WIDTHS
// =======================================
//
// @todo Updated docs
//
// Sizes in human readable format. These are used in conjunction with other
// objects and abstractions found in inuit.css, most commonly the grid system
// and faux flexbox.
//
// We have a mixin to generate our widths and their breakpoint-specific
// variations.


// ---------------------------------------
// Mixin
// ---------------------------------------

@mixin widths($namespace: '') {

	// Whole

	[class~='#{$namespace}1/1']       { width: 100% !important; }

	// Halves

	[class~='#{$namespace}1/2'],
	[class~='#{$namespace}2/4'],
	[class~='#{$namespace}3/6'],
	[class~='#{$namespace}4/8'],
	[class~='#{$namespace}5/10'],
	[class~='#{$namespace}6/12']      { width: 50% !important; }

	// Thirds

	[class~='#{$namespace}1/3'],
	[class~='#{$namespace}2/6'],
	[class~='#{$namespace}3/9'],
	[class~='#{$namespace}4/12']      { width: 33.3333333% !important; }
	[class~='#{$namespace}2/3'],
	[class~='#{$namespace}4/6'],
	[class~='#{$namespace}6/9'],
	[class~='#{$namespace}8/12']      { width: 66.6666666% !important; }

	// Quarters

	[class~='#{$namespace}1/4'],
	[class~='#{$namespace}2/8'],
	[class~='#{$namespace}3/12']      { width: 25% !important; }
	[class~='#{$namespace}3/4'],
	[class~='#{$namespace}6/8'],
	[class~='#{$namespace}9/12']      { width: 75% !important; }

	// Fifths

	[class~='#{$namespace}1/5'],
	[class~='#{$namespace}2/10']      { width: 20% !important; }
	[class~='#{$namespace}2/5'],
	[class~='#{$namespace}4/10']      { width: 40% !important; }
	[class~='#{$namespace}3/5'],
	[class~='#{$namespace}6/10']      { width: 60% !important; }
	[class~='#{$namespace}4/5'],
	[class~='#{$namespace}8/10']      { width: 80% !important; }

	// Sixths

	[class~='#{$namespace}1/6'],
	[class~='#{$namespace}2/12']      { width: 16.6666666% !important; }
	[class~='#{$namespace}5/6'],
	[class~='#{$namespace}10/12']     { width: 83.3333333% !important; }

	// Eighths

	[class~='#{$namespace}1/8']       { width: 12.5% !important; }
	[class~='#{$namespace}3/8']       { width: 37.5% !important; }
	[class~='#{$namespace}5/8']       { width: 62.5% !important; }
	[class~='#{$namespace}7/8']       { width: 87.5% !important; }

	// Ninths

	[class~='#{$namespace}1/9']       { width: 11.1111111% !important; }
	[class~='#{$namespace}2/9']       { width: 22.2222222% !important; }
	[class~='#{$namespace}4/9']       { width: 44.4444444% !important; }
	[class~='#{$namespace}5/9']       { width: 55.5555555% !important; }
	[class~='#{$namespace}7/9']       { width: 77.7777777% !important; }
	[class~='#{$namespace}8/9']       { width: 88.8888888% !important; }

	// Tenths

	[class~='#{$namespace}1/10']      { width: 10% !important; }
	[class~='#{$namespace}3/10']      { width: 30% !important; }
	[class~='#{$namespace}7/10']      { width: 70% !important; }
	[class~='#{$namespace}9/10']      { width: 90% !important; }

	// Twelfths

	[class~='#{$namespace}1/12']      { width:  8.3333333% !important; }
	[class~='#{$namespace}5/12']      { width: 41.6666666% !important; }
	[class~='#{$namespace}7/12']      { width: 58.3333333% !important; }
	[class~='#{$namespace}11/12']     { width: 91.6666666% !important; }

} // widths()



// ---------------------------------------
// Call all widths
// ---------------------------------------

@include widths();



// ---------------------------------------
// Responsive widths
// ---------------------------------------

// If you have set `$responsive` to 'true' in options then you now have
// access to these classes. You can define at which breakpoint you'd like an
// element to be a certain size.
//
// @todo Updated docs
//
// @example
//
// 		<div class='grid 1/4 lap-1/2 palm-1/1'> ... </div>
//
// This would create a `div` that, at 'desktop' sizes, takes up a quarter of the
// horizontal space, a half of that space at 'tablet' sizes, and goes full width
// at 'mobile' sizes.
//
// @demo: jsfiddle.net/inuitcss/WS4Ge

@if $responsive {

	@each $breakpoint, $value in $breakpoints {
		@include breakpoint($breakpoint) {
			@include widths('#{$breakpoint}-');
		}
	}

} // endif
