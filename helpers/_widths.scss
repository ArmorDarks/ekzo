// scss-lint:disable EmptyLineBetweenBlocks, ImportantRule

// =======================================
// ^WIDTHS
// =======================================
//
// @todo Updated docs
//
// Sizes in human readable format. These are used in conjunction with other
// objects and abstractions found in Ekzo.sass, most commonly the grid system
// and faux flexbox.

// ---------------------------------------
// Widths mixin
// ---------------------------------------
// @source https://github.com/inuitcss/tools.widths/blob/master/_tools.widths.scss
//
// @param {list}   $columns    - array of columns which should be generated
// @param {string} $prefix=''  - namespace
// @param {string} $postfix='' - namespace (used for breakpoins generation)
//
// @returns class. For example: `h-2/3@lap`

@mixin ekzo-widths($columns, $prefix:'', $postfix:'') {

  // Loop through the number of columns for each denominator of fractions.
  @each $denominator in $columns {

    // If weâ€™re trying to make wholes, just spit a 100% width utility out one time only.
    @if ($denominator == 1) {
      .#{$prefix}1\/1#{$postfix} { width: 100% !important; }

    } @else {

      // Begin creating a numberator for our fraction up until we hit the denominator.
      @for $numerator from 1 to $denominator + 1 {
        // Build a class in the format `.u-3/4`
        .#{$prefix}#{$numerator}\/#{$denominator}#{$postfix} { width: ($numerator / $denominator) * 100% !important; }
      }

    }

  }

} // ekzo-widths()

// ---------------------------------------
// Call all widths
// ---------------------------------------

@if $ekzo-enable-widths {

  @include ekzo-widths($columns: $ekzo-widths-columns,
    $prefix: $ekzo-ns + $ekzo-helpers-ns);

} // endif

// ---------------------------------------
// Responsive widths
// ---------------------------------------

@if $ekzo-enable-widths and $ekzo-enable-responsive-widths {

  @include ekzo-each-breakpoint() {
    @include ekzo-widths($columns: $ekzo-responsive-widths-columns,
      $prefix: $ekzo-ns + $ekzo-helpers-ns,
      $postfix: ekzo-temp());
  };

} // endif