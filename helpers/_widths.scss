// stylelint-disable declaration-no-important

// =============================================================================
// Width
// =============================================================================
//
// @todo Updated docs
//
// Sizes in human readable format. These are used in conjunction with other
// objects and abstractions found in Ekzo, most commonly the grid system
// and faux flexbox.

// -----------------------------------------------------------------------------
// Widths mixin
// -----------------------------------------------------------------------------
// @source https://github.com/inuitcss/tools.widths/blob/master/_tools.widths.scss
//
// @param {list}   $fractions  - array of columns which should be generated
// @param {string} $prefix=''  - namespace
// @param {string} $postfix='' - namespace (used for breakpoins generation)
//
// @returns class. For example: `h-2/3@lap`

@mixin ekzo-widths-helpers ($fractions, $prefix: $ekzo-h-ns, $postfix: '') {

  .#{$prefix}min0#{$postfix} { min-width: 0 !important; }

  // Loop through the number of columns for each denominator of fractions.
  @each $denominator in $fractions {

    // If weâ€™re trying to make wholes, just spit a 100% width utility out one time only.
    @if ($denominator == 1) {
      .#{$prefix}1\/1#{$postfix} { width: 100% !important; }
    }

    @else {

      // Begin creating a numberator for our fraction up until we hit the denominator.
      @for $numerator from 1 to $denominator + 1 {
        // Build a class in the format `.u-3/4`
        .#{$prefix}#{$numerator}\/#{$denominator}#{$postfix} { width: ($numerator / $denominator) * 100% !important; }
      }

    }

  }

} // ekzo-widths-helpers()

// -----------------------------------------------------------------------------
// Call all widths
// -----------------------------------------------------------------------------

@mixin exports (
  $ns: $ekzo-h-ns,
  $fractions: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
  $responsive-fractions: null,
  $breakpoins: $ekzo-responsive-helpers-breakpoints
) {
  $responsive-fractions: $fractions !default;

  @include ekzo-widths-helpers(
    $prefix: $ns,
    $fractions: $fractions
  )

  // -----------------------------------------------------------------------------
  // Responsive widths
  // -----------------------------------------------------------------------------

  @include ekzo-for-each-breakpoint($matches: $breakpoins) {
    @include ekzo-widths-helpers(
      $prefix: $ns,
      $fractions: $responsive-fractions,
      $postfix: ekzo-temp()
    );
  }
}