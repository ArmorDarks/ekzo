
/*------------------------------------*\
	$MIXINS.GENERIC
\*------------------------------------*/


/**
 * Style any number of headings in one fell swoop, e.g.:
 *
		.foo {
			@include headings(1, 3){
			color:#BADA55;
		}
	}
 *
 * With thanks to @lar_zzz, @paranoida, @rowanmanning and ultimately
 * @thierrylemoulec for refining and improving my initial mixin.
 */

@mixin headings($from: 1, $to: 6) {

	%base-heading {
		@content;
	}

	@if $from >= 1 and $to <= 6 {

		@for $i from $from through $to {

			h#{$i} {
				@extend %base-heading;
			}

		}

	}

}



/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
		@include vendor(border-radius, 4px);
 *
 */

@mixin vendor($property, $value...) {
	-webkit-#{$property}: $value;
	   -moz-#{$property}: $value;
	    -ms-#{$property}: $value;
	     -o-#{$property}: $value;
	        #{$property}: $value;
}


/**
 * Create vendor-prefixed CSS for placeholders in one go, e.g.
 *
		@include placeholder() {
			color: #fff;
			background-color: #000;
		}
 *
 */

@mixin placeholder() {
	::-webkit-input-placeholder { @content }
			  :-moz-placeholder { @content }
			 ::-moz-placeholder { @content }
		 :-ms-input-placeholder { @content }
}



/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 *
		.foo{
			@include vendor (animation, shrink 3s);
		}

		@include keyframe (shrink){
			from{
				font-size:5em;
			}
		}
 *
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */

@mixin keyframe($animation-name) {

	@-webkit-keyframes #{$animation-name} { @content; }

	@-moz-keyframes #{$animation-name}    { @content; }

	@-ms-keyframes #{$animation-name}     { @content; }

	@-o-keyframes #{$animation-name}      { @content; }

	@keyframes #{$animation-name}         { @content; }

}


/**
 * Force overly long spans of text to truncate, e.g.:
 *
		@include truncate(100%);
 *
 * Where `$truncation-boundary` is a united measurement.
 */

@mixin truncate($truncation-boundary) {
	overflow: hidden;
	text-overflow: ellipsis;

	max-width: $truncation-boundary;

	white-space: nowrap;
}