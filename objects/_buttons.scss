
$btn-padding-top:    ekzo-em($ekzo-spacing-unit--half);
$btn-padding-bottom: ekzo-em($ekzo-spacing-unit--half);

@if $ekzo-enable-buttons {

/*------------------------------------*\
  $BUTTONS
\*------------------------------------*/

// @todo Improve and update docs

/**
 * Basic buttons styling.
 *
 * Mainly based on Beautons by Harry Roberts (csswizardry.com/beautons)
 */


/*------------------------------------*\
  $BASE
\*------------------------------------*/

/**
 * Base button styles.
 *
 * 1. Allow us to better style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 5. Force all elements using beautons to appear clickable.
 * 6. Normalise box model styles.
 * 7. Using paddings instead of line-height to allow multi-line buttons
 * 8. If the button's text is 1em with default 1.5 line-height, and the button
      is 3 * font-size tall, then there is .75em of space above and below
      that text. We therefore apply 1em of space to the left and right,
      as padding, to keep consistent spacing.
 * 9. Don't allow buttons to have underlines; it kinda ruins the illusion.
 */



.btn {
  display: inline-block;       /* [1] */

  vertical-align: middle;      /* [2] */

  // white-space: nowrap;      /* [3] */ // should be applied manually if needed with `.text--nowrap`

  cursor: pointer;             /* [5] */

  margin: 0;                   /* [6] */

  padding-top:    $btn-padding-top;    /* [7] */
  padding-bottom: $btn-padding-bottom; /* [7] */

  padding-right: 1em;          /* [8] */
  padding-left:  1em;          /* [8] */

  @if $ekzo-btn-color { color: $ekzo-btn-color; }

  @if $ekzo-btn-bg-color { background-color: $ekzo-btn-bg-color; }

  @if $ekzo-btn-radius { border-radius: $ekzo-btn-radius; }

  @if $ekzo-btn-border-top-width    { border-top-width:    $ekzo-btn-border-top-width;}
  @else                             { border-top-width:    0; }    // 6
  @if $ekzo-btn-border-top-style    { border-top-style:    $ekzo-btn-border-top-style; }
  @else                             { border-top-style:    none; } // 6
  @if $ekzo-btn-border-top-color    { border-top-color:    $ekzo-btn-border-top-color; }

  @if $ekzo-btn-border-right-width  { border-right-width:  $ekzo-btn-border-right-width; }
  @else                             { border-right-width:  0; }    // 6
  @if $ekzo-btn-border-right-style  { border-right-style:  $ekzo-btn-border-right-style; }
  @else                             { border-right-style:  none; } // 6
  @if $ekzo-btn-border-right-color  { border-right-color:  $ekzo-btn-border-right-color; }

  @if $ekzo-btn-border-bottom-width { border-bottom-width: $ekzo-btn-border-bottom-width; }
  @else                             { border-bottom-width: 0; }    // 6
  @if $ekzo-btn-border-bottom-style { border-bottom-style: $ekzo-btn-border-bottom-style; }
  @else                             { border-bottom-style: none; } // 6
  @if $ekzo-btn-border-bottom-color { border-bottom-color: $ekzo-btn-border-bottom-color; }

  @if $ekzo-btn-border-left-width   { border-left-width:   $ekzo-btn-border-left-width; }
  @else                             { border-left-width:   0; }    // 6
  @if $ekzo-btn-border-left-style   { border-left-style:   $ekzo-btn-border-left-style; }
  @else                             { border-left-style:   none; } // 6
  @if $ekzo-btn-border-left-color   { border-left-color:   $ekzo-btn-border-left-color; }

  &,
  &:hover {
    @if $ekzo-btn-unline { text-decoration: none; } /* [9] */
  }

  &:hover {
    @if $ekzo-btn-hover-color { color: $ekzo-btn-hover-color; }

    @if $ekzo-btn-hover-bg-color { background-color: $ekzo-btn-hover-bg-color; }

    @if $ekzo-btn-hover-border-top-width    { border-top-width:   $ekzo-btn-hover-border-top-width; }
    @if $ekzo-btn-hover-border-top-style    { border-top-style:   $ekzo-btn-hover-border-top-style; }
    @if $ekzo-btn-hover-border-top-color    { border-top-color:   $ekzo-btn-hover-border-top-color; }

    @if $ekzo-btn-hover-border-right-width  { border-right-width: $ekzo-btn-hover-border-right-width; }
    @if $ekzo-btn-hover-border-right-style  { border-right-style: $ekzo-btn-hover-border-right-style; }
    @if $ekzo-btn-hover-border-right-color  { border-right-color: $ekzo-btn-hover-border-right-color; }

    @if $ekzo-btn-hover-border-bottom-width { border-bottom-width: $ekzo-btn-hover-border-bottom-width; }
    @if $ekzo-btn-hover-border-bottom-style { border-bottom-style: $ekzo-btn-hover-border-bottom-style; }
    @if $ekzo-btn-hover-border-bottom-color { border-bottom-color: $ekzo-btn-hover-border-bottom-color; }

    @if $ekzo-btn-hover-border-left-width   { border-left-width:  $ekzo-btn-hover-border-left-width; }
    @if $ekzo-btn-hover-border-left-style   { border-left-style:  $ekzo-btn-hover-border-left-style; }
    @if $ekzo-btn-hover-border-left-color   { border-left-color:  $ekzo-btn-hover-border-left-color; }
  }

}


/**
 * Make the button inherit sizing from its parent.
 */

.btn--inherit {
  vertical-align: baseline;

  font-family: inherit;
  font-size:   inherit;

  line-height: inherit;

  padding-right: .5em;
  padding-left:  .5em;
}

} // endif

// ---------------------------------------
// Buttons sizes
// ---------------------------------------
//
// @param {string} $postfix='' - namespace (used for breakpoins generation)

@mixin ekzo-buttons-sizes($postfix: '') {

  // line-height = `$ekzo-line-height`
  .btn--#{$postfix} {
    line-height: $ekzo-line-height;

    padding-top:     0;
    padding-bottom:  0;
    padding-right:  .6em;
    padding-left:   .6em;
  }

  // line-height = 2
  .btn-#{$postfix} {
    padding-top:    ekzo-em($ekzo-spacing-unit--half / 3);
    padding-bottom: ekzo-em($ekzo-spacing-unit--half / 3);
    padding-right:  .8em;
    padding-left:   .8em;
  }

  .btn--reset#{$postfix} {
    padding-top:    $btn-padding-top;
    padding-bottom: $btn-padding-bottom;
    padding-right:  1em;
    padding-left:   1em;
  }

  // line-height = 3
  .btn\+#{$postfix} {
    padding-top:    ekzo-em($ekzo-spacing-unit * .84);
    padding-bottom: ekzo-em($ekzo-spacing-unit * .84);
    padding-right:  1.5em;
    padding-left:   1.5em;
  }

  // line-height = 5
  .btn\+\+#{$postfix} {
    padding-top:    ekzo-em($ekzo-spacing-unit * 1.17);
    padding-bottom: ekzo-em($ekzo-spacing-unit * 1.17);
    padding-right:  2em;
    padding-left:   2em;
  }

  // ----
  // Wide version of button with unspecified line-height

  .btn--wide\+#{$postfix} {
    padding-right: 2em;
    padding-left:  2em;
  }

  .btn--wide\+--#{$postfix} {
    padding-right: 1.5em;
    padding-left:  1.5em;
  }

  .btn--wide\+\+\+#{$postfix} {
    padding-right: 4em;
    padding-left:  4em;
  }

  // ----
  // Fill the entirety of their container.
  //
  // 1. Remove padding so that widths and paddings don't conflict.

  .btn--full#{$postfix} {
    width: 100%;

    padding-right: 0;            /* [1] */
    padding-left:  0;            /* [1] */
  }

  // ----
  // Button font-size modifiers based on map's values.

  $ekzo-btn-prefix: btn--;

  @include ekzo-font-size-classes(buttons, $prefix: $ekzo-btn-prefix, $postfix: $postfix, $line-height:false);

} // ekzo-buttons-sizes()


@if $ekzo-enable-buttons {

// ---------------------------------------
// Call all widths
// ---------------------------------------

@include ekzo-buttons-sizes();

// ---------------------------------------
// Responsive widths
// ---------------------------------------

// If you have set `$responsive` to 'true' in options then you now have
// access to these classes. You can define at which breakpoint you'd like an
// element to be a certain size.
//
// @todo Updated docs
//
// @example
//
//     <div class='grid 1/4 lap-1/2 palm-1/1'> ... </div>
//
// This would create a `div` that, at 'desktop' sizes, takes up a quarter of the
// horizontal space, a half of that space at 'tablet' sizes, and goes full width
// at 'mobile' sizes.
//
// @demo: jsfiddle.net/inuitcss/WS4Ge

@if $ekzo-enable-responsive-buttons {

  @each $breakpoint, $value in ekzo-get($ekzo-breakpoints, breakpoints) {
    @include ekzo-breakpoint($breakpoint) {
      @include ekzo-buttons-sizes($postfix: '\\@#{$breakpoint}');
    }
  }

} // endif

/*------------------------------------*\
  $FUNCTIONS
\*------------------------------------*/

/**
 * Positive actions; e.g. sign in, purchase, submit, etc.
 */

.btn--positive {
  background-color: $ekzo-btn--positive-bg-color;

  color: $ekzo-btn--positive-color;
}


/**
 * Negative actions; e.g. close account, delete photo, remove friend, etc.
 */

.btn--negative {
  background-color: $ekzo-btn--negative-bg-color;

  color: $ekzo-btn--negative-color;
}


/**
 * Inactive, disabled buttons.
 *
 * 1. Make the button look like normal cursor when hovered.
 */

.btn--disabled,
.btn--disabled:hover,
.btn--disabled:active,
.btn--disabled:focus {
  background-color: $ekzo-btn--disabled-bg-color;

  color: $ekzo-btn--disabled-color;

  cursor: default;            /* [1] */
}

} // endif