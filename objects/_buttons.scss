
@if $ekzo-enable-buttons {

// =======================================
// ^BUTTONS
// =======================================
//  Base button styles.
//
//  1. Allow us to better style box model properties.
//  2. Line different sized buttons up a little nicer.
//  3. Normalise box model styles.
//  4. Prevent appearing of borders in case `a` has defined border. Override in your
//     own styles if needed.

.#{$ekzo-objects-ns}btn {
  display: inline-block;       // 1

  vertical-align: middle;      // 2

  margin: 0;                   // 3

  padding-top:    ekzo-em(ekzo-space(.5));
  padding-bottom: ekzo-em(ekzo-space(.5));
  padding-right:  1em;
  padding-left:   1em;

  border-width: 0; // 4

  @if $ekzo-disable-btn-outline and not $ekzo-disable-links-outline { outline: 0; }

  @if $ekzo-btn-text-decoration { text-decoration: $ekzo-btn-text-decoration; }

  @include ekzo-theme() {
    @if ekzo-theme(btn)    { color: ekzo-theme(btn); }
    @if ekzo-theme(btn-bg) { background-color: ekzo-theme(btn-bg); }
  }

  &:hover,
  &:focus { @if $ekzo-btn-hover-text-decoration { text-decoration: $ekzo-btn-hover-text-decoration; } }

}

// ----
// Make the button inherit sizing from its parent.

.#{$ekzo-objects-ns}btn--inherit {
  vertical-align: inherit;

  font-family: inherit;
  font-size:   inherit;

  line-height: inherit;

  padding: inherit
}

} // endif

// ---------------------------------------
// Buttons sizes
// ---------------------------------------
//
// @param {string} $postfix='' - namespace (used for breakpoins generation)

@mixin ekzo-buttons-sizes($postfix: '') {

  .#{$ekzo-objects-ns}btn--#{$postfix} {
    padding-top:     0;
    padding-bottom:  0;
    padding-right:  .6em;
    padding-left:   .6em;
  }

  .#{$ekzo-objects-ns}btn-#{$postfix} {
    padding-top:    ekzo-em(ekzo-space(.5) / 3);
    padding-bottom: ekzo-em(ekzo-space(.5) / 3);
    padding-right:  .8em;
    padding-left:   .8em;
  }

  .#{$ekzo-objects-ns}btn\+#{$postfix} {
    padding-top:    ekzo-em(ekzo-space(1) * .84);
    padding-bottom: ekzo-em(ekzo-space(1) * .84);
    padding-right:  1.5em;
    padding-left:   1.5em;
  }

  .#{$ekzo-objects-ns}btn\+\+#{$postfix} {
    padding-top:    ekzo-em(ekzo-space(1) * 1.17);
    padding-bottom: ekzo-em(ekzo-space(1) * 1.17);
    padding-right:  2em;
    padding-left:   2em;
  }

  // ----
  // Wide version of button with unspecified line-height

  .#{$ekzo-objects-ns}btn--wide--#{$postfix} {
    padding-right: 1.5em;
    padding-left:  1.5em;
  }

  .#{$ekzo-objects-ns}btn--wide#{$postfix} {
    padding-right: 2em;
    padding-left:  2em;
  }

  .#{$ekzo-objects-ns}btn--wide\+\+#{$postfix} {
    padding-right: 4em;
    padding-left:  4em;
  }

  // ----
  // Fill the entirety of their container.
  // 1. Prevent conflict of width and paddings

  .#{$ekzo-objects-ns}btn--full#{$postfix} {
    width: 100%;
    box-sizing: border-box; // 1
  }

  // ----
  // Button font-size modifiers based on map's values.

  @each $variant, $value in ekzo-get($ekzo-font-sizes, buttons) {
    .#{$ekzo-objects-ns}btn#{$variant}#{$postfix} { font-size: $value; }
  }

} // ekzo-buttons-sizes()


@if $ekzo-enable-buttons {

  // ---------------------------------------
  // Call all buttons modifiers
  // ---------------------------------------

  @include ekzo-buttons-sizes();

  // ---------------------------------------
  // Responsive buttons modifiers
  // ---------------------------------------

  @include ekzo-each-breakpoint($enable-for: $ekzo-responsive-buttons-breakpoints) {
    @include ekzo-buttons-sizes($postfix: ekzo-temp());
  };

} // endif