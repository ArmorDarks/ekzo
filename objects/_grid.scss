@if $ekzo-enable-grid {

// =======================================
// ^GRIDS
// =======================================
//
// Fluid and nestable grid system, e.g.:
//
// @example
//
//		<div class="grid">
//
//			<div class="grid__item 1/3">
//				<p>One third grid</p>
//			</div>
//			<div class="grid__item 2/2">
//				<p>Two thirds grid</p>
//			</div>
//			<div class="grid__item 1/2">
//				<p>One half grid</p>
//			</div>
//			<div class="grid__item 1/4">
//				<p>One quarter grid</p>
//			</div>
//			<div class="grid__item 1/4">
//				<p>One quarter grid</p>
//			</div>
//
//		</div>
//
// @demo: jsfiddle.net/inuitcss/CLYUC


// ---------------------------------------
// Grid
// ---------------------------------------
//
// 1. Positioning gutter in the center
// 2. For usage of the grid on lists

// -----
// Standard grid

.grid {
	display:    flex;
	flex-wrap:  wrap;
	list-style: none;                   // 2

	padding-left:  0;                   // 2

	margin-bottom: 0;                   // 2
	margin-left:   -$ekzo-spacing-unit; // 1
}

	.grid__item {
		@include ekzo-vendor(box-sizing, border-box);

		vertical-align: top;

		padding-left: $ekzo-spacing-unit; // 1
	}

// -----
// Floated grid
// For places, where inline-block-based grid simply doesn't cut

.grid--floated {
	@extend %clear;

	display: block; // forcing block model to avoid wrong width of floated elements inside flexbox

	.grid__item { float: left; }

}

// -----
// Very infrequently occurring grid wrappers as children of grid wrappers.

.grid > .grid { margin-left: 0; }



// ---------------------------------------
// Flag Grid
// ---------------------------------------
//
// Throws grid in flag mode
// In that mode grid behaves like table and it's content
// centred vertically

.grid--flag {
	display: table;

	> .grid__item {
		display: table-cell;

		vertical-align: middle;
	}

}

} // endif



// ---------------------------------------
// Grid modifiers
// ---------------------------------------

@mixin ekzo-grid-types($n: '') {

	// ----
	// Grid gutter sizes

	.#{$n}grid- {
		margin-left: -$ekzo-spacing-unit--half;

		> .grid__item { padding-left: $ekzo-spacing-unit--half; }

	}

	.#{$n}grid\+ {
		margin-left: -$ekzo-spacing-unit--double;

		> .grid__item { padding-left: $ekzo-spacing-unit--double; }

	}

	.#{$n}grid\+\+ {
		margin-left: -$ekzo-spacing-unit--triple;

		> .grid__item { padding-left: $ekzo-spacing-unit--triple; }

	}

	.#{$n}grid--flush {
		margin-left: 0;

		> .grid__item { padding-left: 0; }

	}


	// ----
	// Grid items aligment

	.#{$n}grid--center { justify-content: center; }

	.#{$n}grid--middle { align-items: center; }

	.#{$n}grid--bottom { align-items: flex-end; }


	// ----
	// Grid items widths

	.#{$n}grid--auto {

		> .grid__item { width: auto; }

	}

}

@include ekzo-grid-types();

@if $ekzo-enable-grid {
	@if $ekzo-enable-responsive-grid {

		@each $breakpoint, $value in map-get-deep($ekzo-breakpoints, breakpoints) {
			@include ekzo-breakpoint($breakpoint) {
				@include ekzo-grid-types('#{$breakpoint}-');
			}
		}

	} // endif
} // endif