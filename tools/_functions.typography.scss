// =============================================================================
// ^FUNCTIONS.TYPOGRAPHY
// =============================================================================

// -----------------------------------------------------------------------------
// Get line-height
// -----------------------------------------------------------------------------

@function ekzo-line-height ($line-height-name) {
  $value: map-get($ekzo-line-heights, $line-height-name);

  @if $value == false {
    @return null;
  }

  @if not $value {
    @error '[ekzo-lh]: no such line-height key: #{$line-height-name}';
  }

  @return $value;
}

// -----------------------------------------------------------------------------
// Output font size
// -----------------------------------------------------------------------------
//
// Shorthand function to call quickly values from default
// `$ekzo-font-sizes` or specified map with set of font sizes values
//
// @param {string} $name         - font name, specified in default font sizes map
//                                 or specified one
// @param {string} $type=text   - group's name of font in default or specified map
// @param {map} $map=$font-sizes - should mixin search for font sizes in default,
//                                 or specified map
//                                 See `font-size-class()` mixin for details about format
//
// @example
//
//    .heading { font-size: ekzo-font-size(h1, headings); }
//    .heading { font-size: (big, my-group, $map:$my-custom-sizes); }

@function ekzo-font-size (
  $name,
  $type: text,
  $map: $ekzo-font-sizes
) {
  $value: null;

  @if map-has-key($map, $type) {
    $working-map: map-get($map, $type);

    @if map-has-key($working-map, $name) {
      $value: map-get($working-map, $name);
    }

    @else {
      @error 'No such `#{$name}` font name in specified map!';
    }
  }

  @else {
    @error 'No such `#{$type}` font type in specified map!';
  }

  @return $value;
}

// -----------------------------------------------------------------------------
// Get font-family
// -----------------------------------------------------------------------------

@function ekzo-font-family (
  $font-family-name,
  $map: $ekzo-font-families
) {
  $value: map-get($map, $font-family-name);

  @if $value == false {
    @return null;
  }

  @if not $value {
    @error '[ekzo-font-family]: no such key: #{$font-family-name}';
  }

  @return unquote($value);
}

// -----------------------------------------------------------------------------
// Get element font-family
// -----------------------------------------------------------------------------

@function ekzo-ui-font-family (
  $font-family-name,
  $map: $ekzo-ui-font-families
) {
  $value: map-get($map, $font-family-name);

  @if $value == false {
    @return null;
  }

  @if not $value and $value != false {
    @error '[ekzo-ui-font-family]: no such key: #{$font-family-name}';
  }

  @return unquote($value);
}