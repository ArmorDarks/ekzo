
// =======================================
// ^MIXINS.BREAKPOINT
// =======================================
//
// Advanced media query mixin.
// Accepts Sass map of predefined breakpoints which can be used
// across whole project.
//
// It's not recommend to used media-query on it's own -
// instead it's better keep list of all available media-queries
// in project in single Sass map. Due to that fact, that mixin
// doesn't accept custom queries in plain form.
//
// @param {string}           $breakpoint              - breakpoint name in Sass map of predefined breakpoints.
//                                                      Example of entry:
//                                                      ```
//                                                      lap: '(min-width: #{$lap}) and (max-width: #{$desk - 1px})',
//                                                      ```
// @param (string|list|null) $path='breakpoints'      - path to another map inside map (if needed)
// @param (map)              $map='$ekzo-breakpoints' - map with breakpoints
//
// @throws Undefined breakpoint `#{$breakpoint}` in map of breakpoints!
//
// @example
//
//    .component {
//      @include ekzo-breakpoint(palm, breakpoints){ border: 0px; }
//      border: 2px;
//    }
//

@mixin ekzo-breakpoint($breakpoint, $path: 'breakpoints', $map: $ekzo-breakpoints) {

  $breakpoint-value: null;

  // assign value from a specified map following specified path
  @each $key, $value in ekzo-get($map, $path) {
    @if $key == $breakpoint {
      $breakpoint-value: $value;
    }
  }

  // check wether defined breakpoint exists in requested map
  @if not $breakpoint-value {
    @error '[ekzo-breakpoint]: undefined breakpoint `#{$breakpoint}` at path `#{$path}` in specified map'
  }

  // @Note: Use `only` to hide media query from old browsers
  //        Details: http://stackoverflow.com/questions/8549529/what-is-the-difference-between-screen-and-only-screen-in-media-queries
  @media only #{$breakpoint-value} {
    @content;
  }

}