
// =======================================
// ^MIXINS.SPRITES
// =======================================

// ---------------------------------------
// Call all sprites
// ---------------------------------------
//
// Simple mixin to convert all sprites into  classes
// within single loop.
//
// All sprites names will be appended with specified
// in projects settings `$sprites-prefix`
//
// @dep {map} $ekzo-sprites               - 2-dimensional map of sprites.
//
//      @example
//
//      $sprites: (
//        'sprite-name':  ( width: 18px, height: 18px, offset-x:  0,    offset-y: 0 ),
//        'sprite-name2': ( width: 18px, height: 18px, offset-x: -20px, offset-y: 0 ),
//      );
//
//      {string=sprite--} $sprites-prefix - prefix which will be appended to
//                                         sprite name

@mixin ekzo-sprites($map: $ekzo-sprites, $prefix: $ekzo-sprites-prefix) {
  @each $name, $params in $map {

    $prefixed-name: $prefix + $name;

    .#{$prefixed-name} {
      width: map-get($params, width);
      height: map-get($params, height);
      background-position: map-get($params, offset-x) map-get($params, offset-y);
    }

  }
}

// ---------------------------------------
// Call specific sprite
// ---------------------------------------

// ----
// Quick way to look for specific property in
// 2-dimensional map `$ekzo-sprites`
//
// @todo Improve docs

@function ekzo-sprite-map($sprite, $property:false) {
  @if map-has-key($ekzo-sprites, $sprite) {
    $sprite: map-get($ekzo-sprites, $sprite);
  }

  @else { @error "Unknown sprite `#{$sprite}` in `$ekzo-sprites`."; }

  @if map-has-key($sprite, $property) {
    @return map-get($sprite, $property);
  }

  @else { @error "Unknown sprite property `#{$property}` in `$ekzo-sprites`."; }

}

// ----
// Call specific sprite from 2-dimensional map `$ekzo-sprites`
// with specific parameters or CSS properties
//
// @dep {map} $ekzo-sprites               - 2-dimensional map of sprites.
//                                          See `sprites()` mixin for details
//      {string=sprite--} $sprites-prefix - prefix which will be appended to
//                                          sprite name
//
// @example
//
//    @include ekzo-sprite(arrow) { border: 1px } ;
//    @include ekzo-sprite(arrow-multi, vertical, 3px, --white, --red, --blue);
//
// @todo Improve docs

@mixin ekzo-sprite($name, $type:false, $padding:false, $sufix-1:false, $sufix-2:false, $sufix-3:false) {
  $prefixed-name: $ekzo-sprites-prefix + $name;

  $width:       sprite-map($name, width)  !default;
  $height:      sprite-map($name, height) !default;
  $full-width:  0 !default;
  $full-height: 0 !default;

  @if $sufix-1 == false {

    .#{$prefixed-name} {
      width: sprite-map($name, width);
      height: sprite-map($name, height);
      background-position: sprite-map($name, offset-x) sprite-map($name, offset-y);

      @content;
    }

  }

  @else if $sufix-1 != false and $sufix-3 == false {
    @if $type == horizontal or $type == hor {
      $width:  (sprite-map($name, width) - $padding) / 2;
      $full-width:  $width + $padding;
    }

    @else {
      $height: (sprite-map($name, height) - $padding) / 2;
      $full-height: $height + $padding;
    }

    .#{$prefixed-name} {
      width: $width;
      height: $height;
      @content;
    }
    .#{$prefixed-name}#{$sufix-1} { background-position: sprite-map($name, offset-x) sprite-map($name, offset-y); }
    .#{$prefixed-name}#{$sufix-2} { background-position: sprite-map($name, offset-x) - $full-width sprite-map($name, offset-y) - $full-height; }
  }

  @else {
    @if $type == horizontal or $type == hor {
      $width:  (sprite-map($name, width) - $padding * 2) / 3;
      $full-width:  $width + $padding;
    }

    @else {
      $height: (sprite-map($name, height) - $padding * 2) / 3;
      $full-height: $height + $padding;
    }

    .#{$prefixed-name} {
      width: $width;
      height: $height;
      @content;
    }
    .#{$prefixed-name}#{$sufix-1} { background-position: sprite-map($name, offset-x) sprite-map($name, offset-y); }
    .#{$prefixed-name}#{$sufix-2} { background-position: sprite-map($name, offset-x) - $full-width sprite-map($name, offset-y) - $full-height; }
    .#{$prefixed-name}#{$sufix-3} { background-position: sprite-map($name, offset-x) - $full-width * 2 sprite-map($name, offset-y) - $full-height * 2; }
  }
}